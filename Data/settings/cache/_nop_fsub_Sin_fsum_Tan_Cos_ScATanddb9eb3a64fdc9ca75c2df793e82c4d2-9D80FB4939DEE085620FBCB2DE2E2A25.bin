//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: UNKNOWN
// Unknown Toolkit Version
// Based on LLVM 3.4svn
//

.version 7.6
.target sm_75, texmode_independent
.address_size 32

	// .globl	DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan
.const .align 8 .b8 __internal_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.entry DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan(
	.param .u32 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0,
	.param .u32 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1,
	.param .u32 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2,
	.param .u32 .ptr .global .align 8 DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3
)
{
	.local .align 8 .b8 	__local_depot0[40];
	.reg .b32 	%SP;
	.reg .b32 	%SPL;
	.reg .pred 	%p<123>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<159>;
	.reg .f64 	%fd<538>;
	.reg .b64 	%rd<96>;


	mov.u32 	%SPL, __local_depot0;
	ld.param.u32 	%r52, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_1];
	ld.param.u32 	%r53, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_2];
	ld.param.u32 	%r54, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_3];
	add.u32 	%r1, %SPL, 0;
	mov.u32 	%r56, %ctaid.x;
	mov.u32 	%r57, %ntid.x;
	mov.b32	%r58, %envreg3;
	mad.lo.s32 	%r59, %r56, %r57, %r58;
	mov.u32 	%r60, %tid.x;
	add.s32 	%r2, %r59, %r60;
	shl.b32 	%r61, %r2, 3;
	add.s32 	%r3, %r54, %r61;
	mov.f64 	%fd513, 0d7FFFFFFFE0000000;
	setp.gt.s32	%p1, %r2, 4;
	mov.f64 	%fd512, %fd513;
	@%p1 bra 	BB0_2;

	ld.global.f64 	%fd512, [%r3];

BB0_2:
	@%p1 bra 	BB0_4;

	ld.global.f64 	%fd513, [%r3];

BB0_4:
	abs.f64 	%fd94, %fd513;
	setp.gtu.f64	%p3, %fd94, 0d7FF0000000000000;
	or.pred  	%p5, %p3, %p1;
	selp.f64	%fd5, 0d0000000000000000, %fd512, %p5;
	abs.f64 	%fd6, %fd5;
	setp.leu.f64	%p6, %fd6, 0d3FF0000000000000;
	mov.f64 	%fd514, %fd6;
	@%p6 bra 	BB0_6;

	// inline asm
	rcp.approx.ftz.f64 %fd95,%fd6;
	// inline asm
	neg.f64 	%fd97, %fd6;
	mov.f64 	%fd98, 0d3FF0000000000000;
	fma.rn.f64 	%fd99, %fd97, %fd95, %fd98;
	fma.rn.f64 	%fd100, %fd99, %fd99, %fd99;
	fma.rn.f64 	%fd101, %fd100, %fd95, %fd95;
	setp.eq.f64	%p7, %fd6, 0d7FF0000000000000;
	selp.f64	%fd514, 0d0000000000000000, %fd101, %p7;

BB0_6:
	mul.f64 	%fd103, %fd514, %fd514;
	mov.f64 	%fd104, 0d3F2D3B63DBB65B49;
	mov.f64 	%fd105, 0dBEF53E1D2A25FF7E;
	fma.rn.f64 	%fd106, %fd105, %fd103, %fd104;
	mov.f64 	%fd107, 0dBF5312788DDE082E;
	fma.rn.f64 	%fd108, %fd106, %fd103, %fd107;
	mov.f64 	%fd109, 0d3F6F9690C8249315;
	fma.rn.f64 	%fd110, %fd108, %fd103, %fd109;
	mov.f64 	%fd111, 0dBF82CF5AABC7CF0D;
	fma.rn.f64 	%fd112, %fd110, %fd103, %fd111;
	mov.f64 	%fd113, 0d3F9162B0B2A3BFDE;
	fma.rn.f64 	%fd114, %fd112, %fd103, %fd113;
	mov.f64 	%fd115, 0dBF9A7256FEB6FC6B;
	fma.rn.f64 	%fd116, %fd114, %fd103, %fd115;
	mov.f64 	%fd117, 0d3FA171560CE4A489;
	fma.rn.f64 	%fd118, %fd116, %fd103, %fd117;
	mov.f64 	%fd119, 0dBFA4F44D841450E4;
	fma.rn.f64 	%fd120, %fd118, %fd103, %fd119;
	mov.f64 	%fd121, 0d3FA7EE3D3F36BB95;
	fma.rn.f64 	%fd122, %fd120, %fd103, %fd121;
	mov.f64 	%fd123, 0dBFAAD32AE04A9FD1;
	fma.rn.f64 	%fd124, %fd122, %fd103, %fd123;
	mov.f64 	%fd125, 0d3FAE17813D66954F;
	fma.rn.f64 	%fd126, %fd124, %fd103, %fd125;
	mov.f64 	%fd127, 0dBFB11089CA9A5BCD;
	fma.rn.f64 	%fd128, %fd126, %fd103, %fd127;
	mov.f64 	%fd129, 0d3FB3B12B2DB51738;
	fma.rn.f64 	%fd130, %fd128, %fd103, %fd129;
	mov.f64 	%fd131, 0dBFB745D022F8DC5C;
	fma.rn.f64 	%fd132, %fd130, %fd103, %fd131;
	mov.f64 	%fd133, 0d3FBC71C709DFE927;
	fma.rn.f64 	%fd134, %fd132, %fd103, %fd133;
	mov.f64 	%fd135, 0dBFC2492491FA1744;
	fma.rn.f64 	%fd136, %fd134, %fd103, %fd135;
	mov.f64 	%fd137, 0d3FC99999999840D2;
	fma.rn.f64 	%fd138, %fd136, %fd103, %fd137;
	mov.f64 	%fd139, 0dBFD555555555544C;
	fma.rn.f64 	%fd140, %fd138, %fd103, %fd139;
	mul.f64 	%fd141, %fd103, %fd140;
	fma.rn.f64 	%fd142, %fd141, %fd514, %fd514;
	mov.f64 	%fd143, 0d3FF921FB54442D18;
	sub.f64 	%fd144, %fd143, %fd142;
	setp.gt.f64	%p8, %fd6, 0d3FF0000000000000;
	selp.f64	%fd145, %fd144, %fd142, %p8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r62, %temp}, %fd145;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r63}, %fd145;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd5;
	}
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r63, %r65;
	mov.b64 	%fd9, {%r62, %r66};
	add.s32 	%r4, %r53, %r61;
	mov.f64 	%fd516, 0d7FFFFFFFE0000000;
	mov.f64 	%fd515, %fd516;
	@%p1 bra 	BB0_8;

	ld.global.f64 	%fd515, [%r4];

BB0_8:
	@%p1 bra 	BB0_10;

	ld.global.f64 	%fd516, [%r4];

BB0_10:
	abs.f64 	%fd148, %fd516;
	setp.gtu.f64	%p11, %fd148, 0d7FF0000000000000;
	or.pred  	%p13, %p11, %p1;
	selp.f64	%fd14, 0d0000000000000000, %fd515, %p13;
	abs.f64 	%fd15, %fd14;
	setp.eq.f64	%p14, %fd15, 0d7FF0000000000000;
	mov.f64 	%fd519, 0dFFF8000000000000;
	@%p14 bra 	BB0_30;

	setp.gt.f64	%p15, %fd15, 0d41E0000000000000;
	@%p15 bra 	BB0_13;
	bra.uni 	BB0_12;

BB0_13:
	mov.b64 	 %rd1, %fd14;
	and.b64  	%rd2, %rd1, -9223372036854775808;
	shr.u64 	%rd3, %rd1, 52;
	bfe.u64 	%rd34, %rd1, 52, 11;
	add.s64 	%rd35, %rd34, 4294966272;
	cvt.u32.u64	%r6, %rd35;
	shr.u32 	%r69, %r6, 6;
	mov.u32 	%r70, 15;
	sub.s32 	%r148, %r70, %r69;
	mov.u32 	%r71, 19;
	sub.s32 	%r72, %r71, %r69;
	mov.u32 	%r73, 18;
	min.s32 	%r8, %r73, %r72;
	mov.u64 	%rd85, 0;
	setp.ge.s32	%p16, %r148, %r8;
	mov.u32 	%r149, %r1;
	@%p16 bra 	BB0_16;

	shl.b64 	%rd37, %rd1, 11;
	or.b64  	%rd4, %rd37, -9223372036854775808;
	cvt.u32.u64	%r74, %rd3;
	and.b32  	%r75, %r74, 2047;
	add.s32 	%r76, %r75, -1024;
	shr.u32 	%r77, %r76, 6;
	sub.s32 	%r79, %r70, %r77;
	shl.b32 	%r80, %r79, 3;
	mov.u32 	%r81, __internal_i2opi_d;
	add.s32 	%r146, %r81, %r80;
	mov.u64 	%rd85, 0;
	mov.u32 	%r149, %r1;

BB0_15:
	.pragma "nounroll";
	ld.const.u64 	%rd39, [%r146];
	mul.lo.s64 	%rd40, %rd39, %rd4;
	mul.hi.u64 	%rd41, %rd39, %rd4;
	add.s64 	%rd42, %rd85, %rd40;
	setp.lt.u64	%p17, %rd42, %rd85;
	selp.u64	%rd43, 1, 0, %p17;
	add.s64 	%rd85, %rd43, %rd41;
	st.local.u64 	[%r149], %rd42;
	add.s32 	%r149, %r149, 8;
	add.s32 	%r146, %r146, 8;
	add.s32 	%r148, %r148, 1;
	setp.lt.s32	%p18, %r148, %r8;
	@%p18 bra 	BB0_15;

BB0_16:
	st.local.u64 	[%r149], %rd85;
	ld.local.u64 	%rd86, [%r1+24];
	ld.local.u64 	%rd87, [%r1+16];
	and.b32  	%r82, %r6, 63;
	setp.eq.s32	%p19, %r82, 0;
	@%p19 bra 	BB0_18;

	cvt.u32.u64	%r83, %rd3;
	and.b32  	%r84, %r83, 63;
	shl.b64 	%rd44, %rd86, %r84;
	neg.s64 	%rd45, %rd3;
	cvt.u32.u64	%r85, %rd45;
	and.b32  	%r86, %r85, 63;
	shr.u64 	%rd46, %rd87, %r86;
	or.b64  	%rd86, %rd46, %rd44;
	shl.b64 	%rd47, %rd87, %r84;
	ld.local.u64 	%rd48, [%r1+8];
	shr.u64 	%rd49, %rd48, %r86;
	or.b64  	%rd87, %rd49, %rd47;

BB0_18:
	shr.u64 	%rd50, %rd86, 62;
	cvt.u32.u64	%r87, %rd50;
	shr.u64 	%rd51, %rd87, 62;
	shl.b64 	%rd52, %rd86, 2;
	or.b64  	%rd93, %rd51, %rd52;
	shl.b64 	%rd15, %rd87, 2;
	setp.ne.s64	%p20, %rd15, 0;
	selp.u64	%rd53, 1, 0, %p20;
	or.b64  	%rd54, %rd53, %rd93;
	setp.gt.u64	%p21, %rd54, -9223372036854775808;
	selp.u32	%r88, 1, 0, %p21;
	add.s32 	%r20, %r88, %r87;
	setp.lt.u64	%p22, %rd54, -9223372036854775807;
	@%p22 bra 	BB0_19;

	not.b64 	%rd55, %rd93;
	neg.s64 	%rd90, %rd15;
	setp.eq.s64	%p23, %rd15, 0;
	selp.u64	%rd56, 1, 0, %p23;
	add.s64 	%rd93, %rd56, %rd55;
	xor.b64  	%rd89, %rd2, -9223372036854775808;
	bra.uni 	BB0_21;

BB0_12:
	mov.f64 	%fd162, 0d3FE45F306DC9C883;
	mul.rn.f64 	%fd149, %fd14, %fd162;
	// inline asm
	cvt.rni.s32.f64 	%r153, %fd149;
	// inline asm
	cvt.rn.f64.s32	%fd163, %r153;
	neg.f64 	%fd159, %fd163;
	// inline asm
	fma.rn.f64 	%fd150, %fd159, %fd143, %fd14;
	// inline asm
	mov.f64 	%fd156, 0d3C91A62633145C00;
	// inline asm
	fma.rn.f64 	%fd154, %fd159, %fd156, %fd150;
	// inline asm
	mov.f64 	%fd160, 0d397B839A252049C0;
	// inline asm
	fma.rn.f64 	%fd517, %fd159, %fd160, %fd154;
	// inline asm
	bra.uni 	BB0_26;

BB0_19:
	mov.u64 	%rd89, %rd2;
	mov.u64 	%rd90, %rd15;

BB0_21:
	setp.eq.s64	%p24, %rd2, 0;
	neg.s32 	%r91, %r20;
	mov.u32 	%r151, 0;
	selp.b32	%r153, %r20, %r91, %p24;
	setp.lt.s64	%p25, %rd93, 1;
	@%p25 bra 	BB0_23;

BB0_22:
	shr.u64 	%rd57, %rd90, 63;
	shl.b64 	%rd58, %rd93, 1;
	or.b64  	%rd93, %rd57, %rd58;
	shl.b64 	%rd90, %rd90, 1;
	add.s32 	%r151, %r151, -1;
	setp.gt.s64	%p26, %rd93, 0;
	@%p26 bra 	BB0_22;

BB0_23:
	mul.lo.s64 	%rd95, %rd93, -3958705157555305931;
	mov.u64 	%rd59, -3958705157555305931;
	mul.hi.u64 	%rd94, %rd93, %rd59;
	setp.lt.s64	%p27, %rd94, 1;
	@%p27 bra 	BB0_25;

	shl.b64 	%rd60, %rd94, 1;
	shr.u64 	%rd61, %rd95, 63;
	or.b64  	%rd94, %rd60, %rd61;
	mul.lo.s64 	%rd95, %rd93, -7917410315110611862;
	add.s32 	%r151, %r151, -1;

BB0_25:
	setp.ne.s64	%p28, %rd95, 0;
	selp.u64	%rd62, 1, 0, %p28;
	add.s64 	%rd63, %rd62, %rd94;
	add.s32 	%r92, %r151, 1022;
	cvt.u64.u32	%rd64, %r92;
	shl.b64 	%rd65, %rd64, 52;
	shr.u64 	%rd66, %rd63, 11;
	add.s64 	%rd67, %rd65, %rd66;
	bfe.u64 	%rd68, %rd63, 10, 1;
	add.s64 	%rd69, %rd67, %rd68;
	or.b64  	%rd70, %rd69, %rd89;
	mov.b64 	 %fd517, %rd70;

BB0_26:
	add.s32 	%r28, %r153, 1;
	and.b32  	%r93, %r28, 1;
	setp.eq.b32	%p29, %r93, 1;
	mul.rn.f64 	%fd19, %fd517, %fd517;
	@!%p29 bra 	BB0_28;
	bra.uni 	BB0_27;

BB0_27:
	mov.f64 	%fd165, 0dBDA8FF8D5A8F03DB;
	mov.f64 	%fd167, 0d3E21EEA7D67FAD92;
	// inline asm
	fma.rn.f64 	%fd164, %fd165, %fd19, %fd167;
	// inline asm
	mov.f64 	%fd171, 0dBE927E4F8E26B8E3;
	// inline asm
	fma.rn.f64 	%fd168, %fd164, %fd19, %fd171;
	// inline asm
	mov.f64 	%fd175, 0d3EFA01A019DDEC33;
	// inline asm
	fma.rn.f64 	%fd172, %fd168, %fd19, %fd175;
	// inline asm
	mov.f64 	%fd179, 0dBF56C16C16C15D69;
	// inline asm
	fma.rn.f64 	%fd176, %fd172, %fd19, %fd179;
	// inline asm
	mov.f64 	%fd183, 0d3FA5555555555551;
	// inline asm
	fma.rn.f64 	%fd180, %fd176, %fd19, %fd183;
	// inline asm
	mov.f64 	%fd187, 0dBFE0000000000000;
	// inline asm
	fma.rn.f64 	%fd184, %fd180, %fd19, %fd187;
	// inline asm
	mov.f64 	%fd191, 0d3FF0000000000000;
	// inline asm
	fma.rn.f64 	%fd518, %fd184, %fd19, %fd191;
	// inline asm
	bra.uni 	BB0_29;

BB0_28:
	mov.f64 	%fd193, 0d3DE5D8FD1FCF0EC1;
	mov.f64 	%fd195, 0dBE5AE5E5A9291691;
	// inline asm
	fma.rn.f64 	%fd192, %fd193, %fd19, %fd195;
	// inline asm
	mov.f64 	%fd199, 0d3EC71DE3567D4896;
	// inline asm
	fma.rn.f64 	%fd196, %fd192, %fd19, %fd199;
	// inline asm
	mov.f64 	%fd203, 0dBF2A01A019BFDF03;
	// inline asm
	fma.rn.f64 	%fd200, %fd196, %fd19, %fd203;
	// inline asm
	mov.f64 	%fd207, 0d3F8111111110F7D0;
	// inline asm
	fma.rn.f64 	%fd204, %fd200, %fd19, %fd207;
	// inline asm
	mov.f64 	%fd211, 0dBFC5555555555548;
	// inline asm
	fma.rn.f64 	%fd208, %fd204, %fd19, %fd211;
	// inline asm
	mul.rn.f64 	%fd213, %fd208, %fd19;
	// inline asm
	fma.rn.f64 	%fd518, %fd213, %fd517, %fd517;
	// inline asm

BB0_29:
	and.b32  	%r94, %r28, 2;
	setp.eq.s32	%p30, %r94, 0;
	neg.f64 	%fd216, %fd518;
	selp.f64	%fd519, %fd518, %fd216, %p30;

BB0_30:
	add.f64 	%fd25, %fd519, 0d0000000000000000;
	add.s32 	%r29, %r52, %r61;
	mov.f64 	%fd521, 0d7FFFFFFFE0000000;
	mov.f64 	%fd520, %fd521;
	@%p1 bra 	BB0_32;

	ld.global.f64 	%fd218, [%r29];
	mul.f64 	%fd520, %fd218, 0d3FD45F306DC9C883;

BB0_32:
	@%p1 bra 	BB0_34;

	ld.global.f64 	%fd521, [%r29];

BB0_34:
	abs.f64 	%fd220, %fd521;
	setp.gtu.f64	%p33, %fd220, 0d7FF0000000000000;
	or.pred  	%p35, %p33, %p1;
	selp.f64	%fd525, 0d0000000000000000, %fd520, %p35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r96, %temp}, %fd525;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r30}, %fd525;
	}
	add.s32 	%r97, %r30, 1048576;
	mov.b64 	%fd221, {%r96, %r97};
	cvt.rni.f64.f64	%fd222, %fd221;
	cvt.rzi.s64.f64	%rd71, %fd222;
	cvt.u32.u64	%r31, %rd71;
	neg.f64 	%fd223, %fd222;
	mov.f64 	%fd224, 0d3FE0000000000000;
	fma.rn.f64 	%fd225, %fd223, %fd224, %fd525;
	mul.f64 	%fd226, %fd225, 0d3CA1A62633145C07;
	mov.f64 	%fd227, 0d400921FB54442D18;
	fma.rn.f64 	%fd228, %fd225, %fd227, %fd226;
	and.b32  	%r98, %r31, 1;
	mul.rn.f64 	%fd31, %fd228, %fd228;
	setp.eq.s32	%p36, %r98, 0;
	selp.f64	%fd229, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p36;
	shl.b32 	%r99, %r98, 6;
	mov.u32 	%r100, __cudart_sin_cos_coeffs;
	add.s32 	%r101, %r99, %r100;
	ld.const.f64 	%fd230, [%r101+8];
	fma.rn.f64 	%fd231, %fd229, %fd31, %fd230;
	ld.const.f64 	%fd232, [%r101+16];
	fma.rn.f64 	%fd233, %fd231, %fd31, %fd232;
	ld.const.f64 	%fd234, [%r101+24];
	fma.rn.f64 	%fd235, %fd233, %fd31, %fd234;
	ld.const.f64 	%fd236, [%r101+32];
	fma.rn.f64 	%fd237, %fd235, %fd31, %fd236;
	ld.const.f64 	%fd238, [%r101+40];
	fma.rn.f64 	%fd239, %fd237, %fd31, %fd238;
	ld.const.f64 	%fd240, [%r101+48];
	fma.rn.f64 	%fd32, %fd239, %fd31, %fd240;
	fma.rn.f64 	%fd524, %fd32, %fd228, %fd228;
	@%p36 bra 	BB0_36;

	mov.f64 	%fd241, 0d3FF0000000000000;
	fma.rn.f64 	%fd524, %fd32, %fd31, %fd241;

BB0_36:
	and.b32  	%r102, %r31, 2;
	setp.eq.s32	%p37, %r102, 0;
	@%p37 bra 	BB0_38;

	mov.f64 	%fd242, 0d0000000000000000;
	mov.f64 	%fd243, 0dBFF0000000000000;
	fma.rn.f64 	%fd524, %fd524, %fd243, %fd242;

BB0_38:
	cvt.rzi.f64.f64	%fd244, %fd525;
	setp.neu.f64	%p38, %fd244, %fd525;
	@%p38 bra 	BB0_40;

	mov.f64 	%fd245, 0d0000000000000000;
	mul.rn.f64 	%fd524, %fd525, %fd245;

BB0_40:
	add.s32 	%r103, %r30, %r30;
	setp.lt.u32	%p39, %r103, -2038431743;
	@%p39 bra 	BB0_42;

	mov.f64 	%fd246, 0d0000000000000000;
	mul.rn.f64 	%fd525, %fd525, %fd246;

BB0_42:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r104}, %fd525;
	}
	add.s32 	%r105, %r104, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r106, %temp}, %fd525;
	}
	mov.b64 	%fd247, {%r106, %r105};
	cvt.rni.f64.f64	%fd248, %fd247;
	cvt.rzi.s64.f64	%rd72, %fd248;
	cvt.u32.u64	%r107, %rd72;
	neg.f64 	%fd249, %fd248;
	fma.rn.f64 	%fd251, %fd249, %fd224, %fd525;
	mul.f64 	%fd252, %fd251, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd254, %fd251, %fd227, %fd252;
	add.s32 	%r32, %r107, 1;
	and.b32  	%r108, %r32, 1;
	mul.rn.f64 	%fd42, %fd254, %fd254;
	setp.eq.s32	%p40, %r108, 0;
	selp.f64	%fd255, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p40;
	shl.b32 	%r109, %r108, 6;
	add.s32 	%r111, %r109, %r100;
	ld.const.f64 	%fd256, [%r111+8];
	fma.rn.f64 	%fd257, %fd255, %fd42, %fd256;
	ld.const.f64 	%fd258, [%r111+16];
	fma.rn.f64 	%fd259, %fd257, %fd42, %fd258;
	ld.const.f64 	%fd260, [%r111+24];
	fma.rn.f64 	%fd261, %fd259, %fd42, %fd260;
	ld.const.f64 	%fd262, [%r111+32];
	fma.rn.f64 	%fd263, %fd261, %fd42, %fd262;
	ld.const.f64 	%fd264, [%r111+40];
	fma.rn.f64 	%fd265, %fd263, %fd42, %fd264;
	ld.const.f64 	%fd266, [%r111+48];
	fma.rn.f64 	%fd43, %fd265, %fd42, %fd266;
	fma.rn.f64 	%fd48, %fd43, %fd254, %fd254;
	@%p40 bra 	BB0_44;

	mov.f64 	%fd267, 0d3FF0000000000000;
	fma.rn.f64 	%fd48, %fd43, %fd42, %fd267;

BB0_44:
	and.b32  	%r112, %r32, 2;
	setp.eq.s32	%p41, %r112, 0;
	@%p41 bra 	BB0_46;

	mov.f64 	%fd268, 0d0000000000000000;
	mov.f64 	%fd269, 0dBFF0000000000000;
	fma.rn.f64 	%fd48, %fd48, %fd269, %fd268;

BB0_46:
	setp.eq.f64	%p42, %fd48, 0d3FF0000000000000;
	mov.f64 	%fd532, 0d3FF0000000000000;
	@%p42 bra 	BB0_72;

	abs.f64 	%fd49, %fd48;
	setp.gtu.f64	%p43, %fd49, 0d7FF0000000000000;
	@%p43 bra 	BB0_71;
	bra.uni 	BB0_48;

BB0_71:
	add.f64 	%fd532, %fd48, 0dBFF0000000000000;
	bra.uni 	BB0_72;

BB0_48:
	setp.eq.f64	%p44, %fd48, 0d7FF0000000000000;
	@%p44 bra 	BB0_70;
	bra.uni 	BB0_49;

BB0_70:
	mov.f64 	%fd461, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r133}, %fd461;
	}
	setp.gt.s32	%p61, %r133, -1;
	selp.f64	%fd532, 0d7FF0000000000000, 0d0000000000000000, %p61;
	bra.uni 	BB0_72;

BB0_49:
	mov.f64 	%fd271, 0dBFF0000000000000;
	mul.rn.f64 	%fd273, %fd224, %fd271;
	cvt.rzi.f64.f64	%fd274, %fd273;
	mov.f64 	%fd275, 0d4000000000000000;
	mul.rn.f64 	%fd276, %fd275, %fd274;
	sub.f64 	%fd277, %fd271, %fd276;
	abs.f64 	%fd50, %fd277;
	setp.eq.f64	%p45, %fd48, 0d0000000000000000;
	@%p45 bra 	BB0_69;
	bra.uni 	BB0_50;

BB0_69:
	setp.eq.f64	%p60, %fd50, 0d3FF0000000000000;
	rcp.rn.f64 	%fd458, %fd48;
	mov.f64 	%fd459, 0d0000000000000000;
	rcp.rn.f64 	%fd460, %fd459;
	selp.f64	%fd532, %fd458, %fd460, %p60;
	bra.uni 	BB0_72;

BB0_50:
	setp.eq.f64	%p46, %fd48, 0dFFF0000000000000;
	@%p46 bra 	BB0_67;
	bra.uni 	BB0_51;

BB0_67:
	div.rn.f64 	%fd532, %fd271, %fd48;
	setp.neu.f64	%p59, %fd50, 0d3FF0000000000000;
	@%p59 bra 	BB0_72;

	mov.b64 	 %rd75, %fd532;
	xor.b64  	%rd76, %rd75, -9223372036854775808;
	mov.b64 	 %fd532, %rd76;
	bra.uni 	BB0_72;

BB0_51:
	setp.geu.f64	%p47, %fd48, 0d0000000000000000;
	@%p47 bra 	BB0_53;

	cvt.rzi.f64.f64	%fd280, %fd271;
	setp.neu.f64	%p48, %fd280, 0dBFF0000000000000;
	mov.f64 	%fd532, 0dFFF8000000000000;
	@%p48 bra 	BB0_72;

BB0_53:
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r155}, %fd49; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r154, hi}, %fd49; 
	}
	// inline asm
	bfe.u32 	%r156, %r155, 20, 11;
	setp.ne.s32	%p49, %r156, 0;
	@%p49 bra 	BB0_55;

	mov.f64 	%fd285, 0d4350000000000000;
	mul.rn.f64 	%fd284, %fd49, %fd285;
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r155}, %fd284; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r154, hi}, %fd284; 
	}
	// inline asm
	bfe.u32 	%r117, %r155, 20, 11;
	add.s32 	%r156, %r117, -54;

BB0_55:
	add.s32 	%r157, %r156, -1023;
	and.b32  	%r120, %r155, -2146435073;
	or.b32  	%r119, %r120, 1072693248;
	// inline asm
	mov.b64 	%fd528, {%r154, %r119};
	// inline asm
	setp.lt.u32	%p50, %r119, 1073127583;
	@%p50 bra 	BB0_57;

	// inline asm
	{ 
	.reg 	.b32 hi; 
	mov.b64 	{%r121, hi}, %fd528; 
	}
	// inline asm
	// inline asm
	{ 
	.reg 	.b32 lo; 
	mov.b64 	{lo, %r122}, %fd528; 
	}
	// inline asm
	add.s32 	%r124, %r122, -1048576;
	// inline asm
	mov.b64 	%fd528, {%r121, %r124};
	// inline asm
	add.s32 	%r157, %r156, -1022;

BB0_57:
	add.f64 	%fd374, %fd528, 0d3FF0000000000000;
	rcp.rn.f64 	%fd375, %fd374;
	add.f64 	%fd316, %fd528, 0dBFF0000000000000;
	mul.rn.f64 	%fd376, %fd316, %fd375;
	add.f64 	%fd364, %fd376, %fd376;
	mul.rn.f64 	%fd312, %fd364, %fd364;
	mov.f64 	%fd291, 0d3EB0F5FF7D2CAFE2;
	mov.f64 	%fd293, 0d3ED0F5D241AD3B5A;
	// inline asm
	fma.rn.f64 	%fd290, %fd291, %fd312, %fd293;
	// inline asm
	mov.f64 	%fd297, 0d3EF3B20A75488A3F;
	// inline asm
	fma.rn.f64 	%fd294, %fd290, %fd312, %fd297;
	// inline asm
	mov.f64 	%fd301, 0d3F1745CDE4FAECD5;
	// inline asm
	fma.rn.f64 	%fd298, %fd294, %fd312, %fd301;
	// inline asm
	mov.f64 	%fd305, 0d3F3C71C7258A578B;
	// inline asm
	fma.rn.f64 	%fd302, %fd298, %fd312, %fd305;
	// inline asm
	mov.f64 	%fd309, 0d3F6249249242B910;
	// inline asm
	fma.rn.f64 	%fd306, %fd302, %fd312, %fd309;
	// inline asm
	mov.f64 	%fd313, 0d3F89999999999DFB;
	// inline asm
	fma.rn.f64 	%fd310, %fd306, %fd312, %fd313;
	// inline asm
	mul.rn.f64 	%fd377, %fd310, %fd312;
	sub.f64 	%fd378, %fd316, %fd364;
	mul.rn.f64 	%fd317, %fd275, %fd378;
	neg.f64 	%fd315, %fd364;
	// inline asm
	fma.rn.f64 	%fd314, %fd315, %fd316, %fd317;
	// inline asm
	mul.rn.f64 	%fd360, %fd375, %fd314;
	add.f64 	%fd380, %fd377, 0d3FB5555555555555;
	mov.f64 	%fd381, 0d3FB5555555555555;
	sub.f64 	%fd382, %fd381, %fd380;
	add.f64 	%fd383, %fd377, %fd382;
	add.f64 	%fd384, %fd383, 0d0000000000000000;
	add.f64 	%fd385, %fd384, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd327, %fd380, %fd385;
	sub.f64 	%fd386, %fd380, %fd327;
	add.f64 	%fd331, %fd385, %fd386;
	mul.rn.f64 	%fd387, %fd327, %fd364;
	neg.f64 	%fd321, %fd387;
	// inline asm
	fma.rn.f64 	%fd318, %fd327, %fd364, %fd321;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd322, %fd331, %fd360, %fd318;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd326, %fd327, %fd360, %fd322;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd330, %fd331, %fd364, %fd326;
	// inline asm
	add.f64 	%fd343, %fd387, %fd330;
	sub.f64 	%fd388, %fd387, %fd343;
	add.f64 	%fd347, %fd330, %fd388;
	mul.rn.f64 	%fd389, %fd343, %fd364;
	neg.f64 	%fd337, %fd389;
	// inline asm
	fma.rn.f64 	%fd334, %fd343, %fd364, %fd337;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd338, %fd347, %fd360, %fd334;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd342, %fd343, %fd360, %fd338;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd346, %fd347, %fd364, %fd342;
	// inline asm
	add.f64 	%fd359, %fd389, %fd346;
	sub.f64 	%fd390, %fd389, %fd359;
	add.f64 	%fd363, %fd346, %fd390;
	mul.rn.f64 	%fd391, %fd359, %fd364;
	neg.f64 	%fd353, %fd391;
	// inline asm
	fma.rn.f64 	%fd350, %fd359, %fd364, %fd353;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd354, %fd363, %fd360, %fd350;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd358, %fd359, %fd360, %fd354;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd362, %fd363, %fd364, %fd358;
	// inline asm
	add.f64 	%fd392, %fd391, %fd362;
	sub.f64 	%fd393, %fd391, %fd392;
	add.f64 	%fd394, %fd362, %fd393;
	add.f64 	%fd395, %fd364, %fd392;
	sub.f64 	%fd396, %fd364, %fd395;
	add.f64 	%fd397, %fd392, %fd396;
	add.f64 	%fd398, %fd394, %fd397;
	add.f64 	%fd399, %fd360, %fd398;
	add.f64 	%fd400, %fd395, %fd399;
	sub.f64 	%fd401, %fd395, %fd400;
	add.f64 	%fd402, %fd399, %fd401;
	cvt.rn.f64.s32	%fd403, %r157;
	mov.f64 	%fd404, 0d3FE62E42FEFA3000;
	mul.rn.f64 	%fd405, %fd403, %fd404;
	mov.f64 	%fd406, 0d3D53DE6AF278ECE6;
	mul.rn.f64 	%fd407, %fd403, %fd406;
	add.f64 	%fd408, %fd405, %fd400;
	sub.f64 	%fd409, %fd405, %fd408;
	add.f64 	%fd410, %fd400, %fd409;
	add.f64 	%fd411, %fd402, %fd410;
	add.f64 	%fd412, %fd407, %fd411;
	add.f64 	%fd367, %fd408, %fd412;
	sub.f64 	%fd413, %fd408, %fd367;
	add.f64 	%fd371, %fd412, %fd413;
	mul.rn.f64 	%fd414, %fd367, %fd271;
	neg.f64 	%fd369, %fd414;
	// inline asm
	fma.rn.f64 	%fd366, %fd367, %fd271, %fd369;
	// inline asm
	// inline asm
	fma.rn.f64 	%fd370, %fd371, %fd271, %fd366;
	// inline asm
	add.f64 	%fd54, %fd414, %fd370;
	sub.f64 	%fd415, %fd414, %fd54;
	add.f64 	%fd55, %fd370, %fd415;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd54;
	}
	mov.b32 	 %f1, %r45;
	abs.f32 	%f2, %f1;
	setp.lt.f32	%p51, %f2, 0f40874911;
	@%p51 bra 	BB0_59;
	bra.uni 	BB0_58;

BB0_59:
	mov.f64 	%fd419, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd420, %fd54, %fd419;
	mov.f64 	%fd421, 0d4338000000000000;
	add.rn.f64 	%fd422, %fd420, %fd421;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r46, %temp}, %fd422;
	}
	mov.f64 	%fd423, 0dC338000000000000;
	add.rn.f64 	%fd424, %fd422, %fd423;
	mov.f64 	%fd425, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd426, %fd424, %fd425, %fd54;
	mov.f64 	%fd427, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd428, %fd424, %fd427, %fd426;
	mov.f64 	%fd429, 0d3E928AF3FCA213EA;
	mov.f64 	%fd430, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd431, %fd430, %fd428, %fd429;
	mov.f64 	%fd432, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd433, %fd431, %fd428, %fd432;
	mov.f64 	%fd434, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd435, %fd433, %fd428, %fd434;
	mov.f64 	%fd436, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd437, %fd435, %fd428, %fd436;
	mov.f64 	%fd438, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd439, %fd437, %fd428, %fd438;
	mov.f64 	%fd440, 0d3F81111111122322;
	fma.rn.f64 	%fd441, %fd439, %fd428, %fd440;
	mov.f64 	%fd442, 0d3FA55555555502A1;
	fma.rn.f64 	%fd443, %fd441, %fd428, %fd442;
	mov.f64 	%fd444, 0d3FC5555555555511;
	fma.rn.f64 	%fd445, %fd443, %fd428, %fd444;
	mov.f64 	%fd446, 0d3FE000000000000B;
	fma.rn.f64 	%fd447, %fd445, %fd428, %fd446;
	mov.f64 	%fd448, 0d3FF0000000000000;
	fma.rn.f64 	%fd449, %fd447, %fd428, %fd448;
	fma.rn.f64 	%fd529, %fd449, %fd428, %fd448;
	abs.s32 	%r125, %r46;
	setp.lt.s32	%p54, %r125, 1023;
	@%p54 bra 	BB0_61;
	bra.uni 	BB0_60;

BB0_61:
	shl.b32 	%r131, %r46, 20;
	add.s32 	%r158, %r131, 1072693248;
	bra.uni 	BB0_62;

BB0_58:
	setp.lt.s32	%p52, %r45, 0;
	selp.f64	%fd416, 0d0000000000000000, 0d7FF0000000000000, %p52;
	abs.f64 	%fd417, %fd54;
	setp.gtu.f64	%p53, %fd417, 0d7FF0000000000000;
	add.f64 	%fd418, %fd54, %fd54;
	selp.f64	%fd532, %fd418, %fd416, %p53;
	bra.uni 	BB0_63;

BB0_60:
	add.s32 	%r126, %r46, 2046;
	shl.b32 	%r127, %r126, 19;
	and.b32  	%r128, %r127, -1048576;
	shl.b32 	%r129, %r126, 20;
	sub.s32 	%r158, %r129, %r128;
	mov.u32 	%r130, 0;
	mov.b64 	%fd450, {%r130, %r128};
	mul.f64 	%fd529, %fd529, %fd450;

BB0_62:
	mov.u32 	%r132, 0;
	mov.b64 	%fd451, {%r132, %r158};
	mul.f64 	%fd532, %fd529, %fd451;

BB0_63:
	abs.f64 	%fd452, %fd532;
	setp.eq.f64	%p55, %fd452, 0d7FF0000000000000;
	@%p55 bra 	BB0_65;

	// inline asm
	fma.rn.f64 	%fd532, %fd532, %fd55, %fd532;
	// inline asm

BB0_65:
	setp.neu.f64	%p56, %fd50, 0d3FF0000000000000;
	or.pred  	%p58, %p47, %p56;
	@%p58 bra 	BB0_72;

	mov.b64 	 %rd73, %fd532;
	xor.b64  	%rd74, %rd73, -9223372036854775808;
	mov.b64 	 %fd532, %rd74;

BB0_72:
	mul.f64 	%fd71, %fd524, %fd532;
	setp.lt.f64	%p62, %fd71, 0d0000000000000000;
	setp.gt.f64	%p63, %fd25, 0d0000000000000000;
	and.pred  	%p64, %p62, %p63;
	@%p64 bra 	BB0_74;

	setp.lt.f64	%p65, %fd25, 0d0000000000000000;
	setp.gt.f64	%p66, %fd71, 0d0000000000000000;
	and.pred  	%p67, %p65, %p66;
	@!%p67 bra 	BB0_82;
	bra.uni 	BB0_74;

BB0_74:
	neg.f64 	%fd72, %fd25;
	setp.eq.f64	%p68, %fd71, %fd72;
	mov.f64 	%fd533, 0d0000000000000000;
	@%p68 bra 	BB0_83;

	setp.eq.f64	%p69, %fd71, 0d0000000000000000;
	setp.eq.f64	%p70, %fd25, 0d8000000000000000;
	or.pred  	%p71, %p69, %p70;
	@%p71 bra 	BB0_82;

	add.f64 	%fd463, %fd25, %fd71;
	abs.f64 	%fd73, %fd463;
	abs.f64 	%fd464, %fd73;
	setp.geu.f64	%p72, %fd464, 0d7FF0000000000000;
	@%p72 bra 	BB0_82;

	abs.f64 	%fd74, %fd71;
	mul.f64 	%fd465, %fd74, 0d3D30000000000000;
	setp.gt.f64	%p73, %fd73, %fd465;
	@%p73 bra 	BB0_82;

	abs.f64 	%fd75, %fd72;
	mul.f64 	%fd466, %fd75, 0d3D30000000000000;
	setp.gt.f64	%p74, %fd73, %fd466;
	@%p74 bra 	BB0_82;

	mov.b64 	 %rd77, %fd73;
	setp.lt.s64	%p75, %rd77, 9007199254740992;
	setp.le.f64	%p76, %fd73, 0d001FFFFFFFFFFFFF;
	and.pred  	%p77, %p75, %p76;
	@!%p77 bra 	BB0_81;
	bra.uni 	BB0_80;

BB0_80:
	mov.b64 	 %rd78, %fd74;
	setp.lt.s64	%p78, %rd78, 9007199254740992;
	setp.le.f64	%p79, %fd74, 0d001FFFFFFFFFFFFF;
	and.pred  	%p80, %p78, %p79;
	@%p80 bra 	BB0_101;
	bra.uni 	BB0_81;

BB0_101:
	mov.b64 	 %rd79, %fd75;
	setp.lt.s64	%p84, %rd79, 9007199254740992;
	setp.le.f64	%p85, %fd75, 0d001FFFFFFFFFFFFF;
	and.pred  	%p86, %p85, %p84;
	mul.f64 	%fd471, %fd74, 0d3CF0000000000000;
	setp.geu.f64	%p87, %fd73, %fd471;
	or.pred  	%p88, %p86, %p87;
	mul.f64 	%fd472, %fd75, 0d3CF0000000000000;
	setp.geu.f64	%p89, %fd73, %fd472;
	or.pred  	%p90, %p89, %p88;
	@!%p90 bra 	BB0_83;
	bra.uni 	BB0_82;

BB0_81:
	mul.f64 	%fd468, %fd74, 0d3CF0000000000000;
	setp.geu.f64	%p81, %fd73, %fd468;
	mul.f64 	%fd469, %fd75, 0d3CF0000000000000;
	setp.geu.f64	%p82, %fd73, %fd469;
	or.pred  	%p83, %p81, %p82;
	@%p83 bra 	BB0_82;
	bra.uni 	BB0_83;

BB0_82:
	add.f64 	%fd473, %fd25, %fd71;
	mul.f64 	%fd533, %fd473, 0d3FD45F306DC9C883;

BB0_83:
	mov.u32 	%r144, __cudart_sin_cos_coeffs;
	mov.f64 	%fd511, 0d400921FB54442D18;
	mov.f64 	%fd510, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r134}, %fd533;
	}
	add.s32 	%r135, %r134, 1048576;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r136, %temp}, %fd533;
	}
	mov.b64 	%fd474, {%r136, %r135};
	cvt.rni.f64.f64	%fd475, %fd474;
	cvt.rzi.s64.f64	%rd80, %fd475;
	cvt.u32.u64	%r50, %rd80;
	neg.f64 	%fd476, %fd475;
	fma.rn.f64 	%fd478, %fd476, %fd510, %fd533;
	mul.f64 	%fd479, %fd478, 0d3CA1A62633145C07;
	fma.rn.f64 	%fd481, %fd478, %fd511, %fd479;
	and.b32  	%r137, %r50, 1;
	mul.rn.f64 	%fd78, %fd481, %fd481;
	setp.eq.s32	%p91, %r137, 0;
	selp.f64	%fd482, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p91;
	shl.b32 	%r138, %r137, 6;
	add.s32 	%r140, %r138, %r144;
	ld.const.f64 	%fd483, [%r140+8];
	fma.rn.f64 	%fd484, %fd482, %fd78, %fd483;
	ld.const.f64 	%fd485, [%r140+16];
	fma.rn.f64 	%fd486, %fd484, %fd78, %fd485;
	ld.const.f64 	%fd487, [%r140+24];
	fma.rn.f64 	%fd488, %fd486, %fd78, %fd487;
	ld.const.f64 	%fd489, [%r140+32];
	fma.rn.f64 	%fd490, %fd488, %fd78, %fd489;
	ld.const.f64 	%fd491, [%r140+40];
	fma.rn.f64 	%fd492, %fd490, %fd78, %fd491;
	ld.const.f64 	%fd493, [%r140+48];
	fma.rn.f64 	%fd79, %fd492, %fd78, %fd493;
	fma.rn.f64 	%fd536, %fd79, %fd481, %fd481;
	@%p91 bra 	BB0_85;

	mov.f64 	%fd494, 0d3FF0000000000000;
	fma.rn.f64 	%fd536, %fd79, %fd78, %fd494;

BB0_85:
	and.b32  	%r141, %r50, 2;
	setp.eq.s32	%p92, %r141, 0;
	@%p92 bra 	BB0_87;

	mov.f64 	%fd495, 0d0000000000000000;
	mov.f64 	%fd496, 0dBFF0000000000000;
	fma.rn.f64 	%fd536, %fd536, %fd496, %fd495;

BB0_87:
	cvt.rzi.f64.f64	%fd497, %fd533;
	setp.neu.f64	%p93, %fd497, %fd533;
	@%p93 bra 	BB0_89;

	mov.f64 	%fd498, 0d0000000000000000;
	mul.rn.f64 	%fd536, %fd533, %fd498;

BB0_89:
	setp.lt.f64	%p94, %fd9, 0d0000000000000000;
	setp.lt.f64	%p95, %fd536, 0d0000000000000000;
	and.pred  	%p96, %p95, %p94;
	@%p96 bra 	BB0_91;

	setp.gt.f64	%p97, %fd536, 0d0000000000000000;
	setp.gt.f64	%p98, %fd9, 0d0000000000000000;
	and.pred  	%p99, %p97, %p98;
	@!%p99 bra 	BB0_99;
	bra.uni 	BB0_91;

BB0_91:
	setp.eq.f64	%p100, %fd536, %fd9;
	mov.f64 	%fd537, 0d0000000000000000;
	@%p100 bra 	BB0_100;

	setp.eq.f64	%p101, %fd536, 0d0000000000000000;
	setp.eq.f64	%p102, %fd9, 0d0000000000000000;
	or.pred  	%p103, %p101, %p102;
	@%p103 bra 	BB0_99;

	sub.f64 	%fd500, %fd536, %fd9;
	abs.f64 	%fd87, %fd500;
	abs.f64 	%fd501, %fd87;
	setp.geu.f64	%p104, %fd501, 0d7FF0000000000000;
	@%p104 bra 	BB0_99;

	abs.f64 	%fd88, %fd536;
	mul.f64 	%fd502, %fd88, 0d3D30000000000000;
	setp.gt.f64	%p105, %fd87, %fd502;
	@%p105 bra 	BB0_99;

	abs.f64 	%fd89, %fd9;
	mul.f64 	%fd503, %fd89, 0d3D30000000000000;
	setp.gt.f64	%p106, %fd87, %fd503;
	@%p106 bra 	BB0_99;

	mov.b64 	 %rd81, %fd87;
	setp.lt.s64	%p107, %rd81, 9007199254740992;
	setp.le.f64	%p108, %fd87, 0d001FFFFFFFFFFFFF;
	and.pred  	%p109, %p107, %p108;
	@!%p109 bra 	BB0_98;
	bra.uni 	BB0_97;

BB0_97:
	mov.b64 	 %rd82, %fd88;
	setp.lt.s64	%p110, %rd82, 9007199254740992;
	setp.le.f64	%p111, %fd88, 0d001FFFFFFFFFFFFF;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	BB0_102;
	bra.uni 	BB0_98;

BB0_102:
	mov.b64 	 %rd83, %fd89;
	setp.lt.s64	%p116, %rd83, 9007199254740992;
	setp.le.f64	%p117, %fd89, 0d001FFFFFFFFFFFFF;
	and.pred  	%p118, %p117, %p116;
	mul.f64 	%fd508, %fd88, 0d3CF0000000000000;
	setp.geu.f64	%p119, %fd87, %fd508;
	or.pred  	%p120, %p118, %p119;
	mul.f64 	%fd509, %fd89, 0d3CF0000000000000;
	setp.geu.f64	%p121, %fd87, %fd509;
	or.pred  	%p122, %p121, %p120;
	@!%p122 bra 	BB0_100;
	bra.uni 	BB0_99;

BB0_98:
	mul.f64 	%fd505, %fd88, 0d3CF0000000000000;
	setp.geu.f64	%p113, %fd87, %fd505;
	mul.f64 	%fd506, %fd89, 0d3CF0000000000000;
	setp.geu.f64	%p114, %fd87, %fd506;
	or.pred  	%p115, %p113, %p114;
	@%p115 bra 	BB0_99;
	bra.uni 	BB0_100;

BB0_99:
	sub.f64 	%fd537, %fd536, %fd9;

BB0_100:
	ld.param.u32 	%r145, [DynamicKernel_nop_fsub_Sin_fsum_Tan_Cos_ScATan_param_0];
	add.s32 	%r143, %r145, %r61;
	st.global.f64 	[%r143], %fd537;
	ret;
}


  